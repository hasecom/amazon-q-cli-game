      
      // 2. 敵の移動（プレイヤーが2回移動するごとに敵が1回移動）
      if (newMoveCount % 2 === 0) {
        for (let i = 0; i < newEnemies.length; i++) {
          const enemy = newEnemies[i];
          
          // 現在の敵の位置をボードから削除
          if (
            enemy.x >= 0 && 
            enemy.x < boardSize && 
            enemy.y >= 0 && 
            enemy.y < boardSize &&
            newBoard[enemy.y][enemy.x] && 
            newBoard[enemy.y][enemy.x].type === 'enemy'
          ) {
            // 敵が漢字の上にいた場合、漢字を復元
            if (newBoard[enemy.y][enemy.x].onKanji) {
              newBoard[enemy.y][enemy.x] = newBoard[enemy.y][enemy.x].onKanji;
            } else {
              newBoard[enemy.y][enemy.x] = null;
            }
          }
          
          // プレイヤーに近づく最適な方向を見つける
          let bestDirection = { x: 0, y: 0 };
          let minDistance = Number.MAX_VALUE;
          
          // 可能な移動方向
          const directions = [
            { x: 0, y: -1 }, // 上
            { x: 0, y: 1 },  // 下
            { x: -1, y: 0 }, // 左
            { x: 1, y: 0 }   // 右
          ];
